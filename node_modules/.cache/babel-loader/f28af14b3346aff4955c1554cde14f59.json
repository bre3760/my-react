{"ast":null,"code":"var _jsxFileName = \"/Users/brendanpolidori/Desktop/project_repos/my-react.nosync/learn-react/src/components/HookCounterTwo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // function HookCounterTwo() {\n//     const initialCount = 0\n//     const [count, setCount] = useState(initialCount)\n//     return (\n//         <div>\n//             Count: {count}\n//             <button onClick={()=>setCount(initialCount)}>Reset</button>\n//             <button onClick={()=>setCount(count + 1)}>Increment</button>\n//             <button onClick={()=>setCount(count - 1)}>Decrement</button>\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HookCounterTwo() {\n  _s();\n\n  const initialCount = 0;\n  const [count, setCount] = useState(initialCount);\n\n  const incrementFive = () => {\n    for (let i = 0; i < 5, i++;) {\n      setCount(prevCount => prevCount + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Count: \", count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(initialCount),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(prevCount => prevCount + 1),\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(prevCount => prevCount + 1),\n      children: \"Decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementFive,\n      children: \"Increment 5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HookCounterTwo, \"Wx3FONZm5HiCy6oZC/sfWdOGImo=\");\n\n_c = HookCounterTwo;\nexport default HookCounterTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookCounterTwo\");","map":{"version":3,"sources":["/Users/brendanpolidori/Desktop/project_repos/my-react.nosync/learn-react/src/components/HookCounterTwo.js"],"names":["React","useState","HookCounterTwo","initialCount","count","setCount","incrementFive","i","prevCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACtB,QAAMC,YAAY,GAAG,CAArB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,YAAD,CAAlC;;AAEA,QAAMG,aAAa,GAAG,MAAM;AACxB,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAF,EAAIA,CAAC,EAAjB,GAAsB;AAClBF,MAAAA,QAAQ,CAACG,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAR;AACH;AACJ,GAJD;;AAKA,sBACI;AAAA,0BACYJ,KADZ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAIC,QAAQ,CAACF,YAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAIE,QAAQ,CAACG,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAQ,MAAA,OAAO,EAAE,MAAIH,QAAQ,CAACG,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAIF,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAlBQJ,c;;KAAAA,c;AAoBT,eAAeA,cAAf","sourcesContent":["import React, {useState} from 'react'\n\n// function HookCounterTwo() {\n//     const initialCount = 0\n//     const [count, setCount] = useState(initialCount)\n//     return (\n//         <div>\n//             Count: {count}\n//             <button onClick={()=>setCount(initialCount)}>Reset</button>\n//             <button onClick={()=>setCount(count + 1)}>Increment</button>\n//             <button onClick={()=>setCount(count - 1)}>Decrement</button>\n//         </div>\n//     )\n// }\n\nfunction HookCounterTwo() {\n    const initialCount = 0\n    const [count, setCount] = useState(initialCount)\n\n    const incrementFive = () => {\n        for(let i=0;i<5,i++;) {\n            setCount(prevCount => prevCount + 1)\n        }\n    }\n    return (\n        <div>\n            Count: {count}\n            <button onClick={()=>setCount(initialCount)}>Reset</button>\n            <button onClick={()=>setCount(prevCount => prevCount + 1)}>Increment</button>\n            <button onClick={()=>setCount(prevCount => prevCount + 1)}>Decrement</button>\n            <button onClick = {incrementFive}>Increment 5</button>\n        </div>\n    )\n}\n\nexport default HookCounterTwo\n"]},"metadata":{},"sourceType":"module"}