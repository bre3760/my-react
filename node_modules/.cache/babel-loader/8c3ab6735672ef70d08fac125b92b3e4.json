{"ast":null,"code":"var _jsxFileName = \"/Users/brendanpolidori/Desktop/project_repos/my-react.nosync/learn-react/src/components/Counter.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  } // using setState\n  // increment(){\n  //     this.setState(\n  //         {\n  //         count:this.state.count +1 //this is an object that sets the state value\n  //         },\n  //         ()=>{console.log('Callback value', this.state.count)} // async\n  //     )\n  //     console.log(this.state.count) //syncronous\n  // }\n  // this time i pass a funciton as the first parameter since\n  // i want to change the state based on the previous value of the state\n\n\n  increment() {\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    }), () => {\n      console.log('Callback value', this.state.count);\n    } // async\n    );\n    console.log(this.state.count); //syncronous\n  }\n\n  incrementFive() {\n    this.increment();\n    this.increment();\n    this.increment();\n    this.increment();\n    this.increment();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count - \", this.state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.incrementFive(),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/brendanpolidori/Desktop/project_repos/my-react.nosync/learn-react/src/components/Counter.js"],"names":["React","Component","Counter","constructor","props","state","count","increment","setState","prevState","console","log","incrementFive","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAE5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACRC,MAAAA,KAAK,EAAC;AADE,KAAb;AAGH,GAR2B,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AACAC,EAAAA,SAAS,GAAE;AACP,SAAKC,QAAL,CACKC,SAAD,KAAc;AACVH,MAAAA,KAAK,EAAGG,SAAS,CAACH,KAAV,GAAiB;AADf,KAAd,CADJ,EAKI,MAAI;AAACI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKN,KAAL,CAAWC,KAAzC;AAAgD,KALzD,CAK0D;AAL1D;AAQAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB,EATO,CASuB;AACjC;;AAGDM,EAAAA,aAAa,GAAE;AACX,SAAKL,SAAL;AACA,SAAKA,SAAL;AACA,SAAKA,SAAL;AACA,SAAKA,SAAL;AACA,SAAKA,SAAL;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACa,KAAKR,KAAL,CAAWC,KADxB,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAK,KAAKM,aAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AApD2B;;AAuDhC,eAAeV,OAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass Counter extends Component {\n    \n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             count:0\n        }\n    }\n    // using setState\n    // increment(){\n    //     this.setState(\n    //         {\n    //         count:this.state.count +1 //this is an object that sets the state value\n    //         },\n    //         ()=>{console.log('Callback value', this.state.count)} // async\n\n    //     )\n    //     console.log(this.state.count) //syncronous\n    // }\n\n    // this time i pass a funciton as the first parameter since\n    // i want to change the state based on the previous value of the state\n    increment(){\n        this.setState(\n            (prevState)=>({\n                count : prevState.count +1\n            })\n            ,\n            ()=>{console.log('Callback value', this.state.count)} // async\n\n        )\n        console.log(this.state.count) //syncronous\n    }\n    \n\n    incrementFive(){\n        this.increment()\n        this.increment()\n        this.increment()\n        this.increment()\n        this.increment()\n    }\n\n    render() {\n        return (\n            <div>\n                Count - {this.state.count}\n                {/* <button onClick={()=> this.increment()}>Increment</button> */}\n                <button onClick={()=> this.incrementFive()}>Increment</button>\n            </div>\n        )\n    }\n}\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}