{"ast":null,"code":"var _jsxFileName = \"/Users/brendanpolidori/Desktop/project_repos/my-react.nosync/learn-react/src/components/HookCounter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HookCounter() {\n  _s();\n\n  // since hooks are just functions we simply call them\n  //the hook accepts an argument which is an initial value \n  // and returns the current value of the state property \n  // and a method that is capoable of updating the statte property\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: [\" Count \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HookCounter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = HookCounter;\nexport default HookCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookCounter\");","map":{"version":3,"sources":["/Users/brendanpolidori/Desktop/project_repos/my-react.nosync/learn-react/src/components/HookCounter.js"],"names":["React","useState","HookCounter","count","setCount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB;AACA;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAsBH,QAAQ,CAAC,CAAD,CAApC;AAEA,sBACI;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAE,MAAIG,QAAQ,CAACD,KAAK,GAAC,CAAP,CAA7B;AAAA,4BAAgDA,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAZQD,W;;KAAAA,W;AAcT,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\n \nfunction HookCounter() {\n    // since hooks are just functions we simply call them\n    //the hook accepts an argument which is an initial value \n    // and returns the current value of the state property \n    // and a method that is capoable of updating the statte property\n    const [count, setCount]  =  useState(0)\n\n    return (\n        <div>\n            <button onClick={()=>setCount(count+1)}> Count {count} </button>\n        </div>\n    )\n}\n\nexport default HookCounter\n"]},"metadata":{},"sourceType":"module"}