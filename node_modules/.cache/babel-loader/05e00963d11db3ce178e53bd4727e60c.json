{"ast":null,"code":"var _jsxFileName = \"/Users/brendanpolidori/Desktop/project_repos/my-react.nosync/learn-react/src/components/withCounter.js\";\n// filename is an HOC convention\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatedComponent = OriginalComponent => {\n  class NewComponent extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.incrementCount = () => {\n        this.setState(prevState => {\n          return {\n            count: prevState.count + 1\n          };\n        });\n      };\n\n      this.state = {\n        count: 0\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(OriginalComponent, {\n        count: this.state.count,\n        name: \"Brendan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  return NewComponent;\n};\n\n_c = UpdatedComponent;\nexport default UpdatedComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatedComponent\");","map":{"version":3,"sources":["/Users/brendanpolidori/Desktop/project_repos/my-react.nosync/learn-react/src/components/withCounter.js"],"names":["React","Component","UpdatedComponent","OriginalComponent","NewComponent","constructor","props","incrementCount","setState","prevState","count","state","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,gBAAgB,GAAKC,iBAAD,IAAuB;AAC7C,QAAMC,YAAN,SAA2BJ,KAAK,CAACC,SAAjC,CAA0C;AACtCI,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAQnBC,cARmB,GAQF,MAAI;AACjB,aAAKC,QAAL,CACIC,SAAS,IAAG;AACR,iBAAO;AAACC,YAAAA,KAAK,EAACD,SAAS,CAACC,KAAV,GAAiB;AAAxB,WAAP;AACH,SAHL;AAKH,OAdkB;;AAGf,WAAKC,KAAL,GAAa;AACRD,QAAAA,KAAK,EAAC;AADE,OAAb;AAGH;;AASDE,IAAAA,MAAM,GAAE;AACJ,0BAAO,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,KAArC;AAA4C,QAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAlBqC;;AAoB1C,SAAON,YAAP;AACH,CAtBD;;KAAMF,gB;AAwBN,eAAeA,gBAAf","sourcesContent":["// filename is an HOC convention\nimport React, { Component } from 'react'\n\nconst UpdatedComponent  = (OriginalComponent) => {\n    class NewComponent extends React.Component{\n        constructor(props) {\n            super(props)\n        \n            this.state = {\n                 count:0\n            }\n        }\n    \n        incrementCount = ()=>{\n            this.setState(\n                prevState =>{\n                    return {count:prevState.count +1 }\n                }\n            )\n        }\n        render(){\n            return <OriginalComponent count={this.state.count} name='Brendan'></OriginalComponent>\n        }\n    } \n    return NewComponent\n}\n\nexport default UpdatedComponent"]},"metadata":{},"sourceType":"module"}